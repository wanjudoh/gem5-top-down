diff --git a/configs/common/MemConfig.py b/configs/common/MemConfig.py
index baa0d233af..0203716a10 100644
--- a/configs/common/MemConfig.py
+++ b/configs/common/MemConfig.py
@@ -38,7 +38,8 @@ from common import ObjectList
 from common import HMC
 
 
-def create_mem_intf(intf, r, i, intlv_bits, intlv_size, xor_low_bit):
+def create_mem_intf(intf, r, i, intlv_bits, intlv_size, xor_low_bit,
+        opt_dram_device_size):
     """
     Helper function for creating a single memoy controller from the given
     options.  This function is invoked multiple times in config_mem function
@@ -63,6 +64,9 @@ def create_mem_intf(intf, r, i, intlv_bits, intlv_size, xor_low_bit):
     # mapping and row-buffer size
     interface = intf()
 
+    if opt_dram_device_size:
+        interface.device_size = opt_dram_device_size
+
     # Only do this for DRAMs
     if issubclass(intf, m5.objects.DRAMInterface):
         # If the channel bits are appearing after the column
@@ -141,6 +145,7 @@ def config_mem(options, system):
     opt_dram_powerdown = getattr(options, "enable_dram_powerdown", None)
     opt_mem_channels_intlv = getattr(options, "mem_channels_intlv", 128)
     opt_xor_low_bit = getattr(options, "xor_low_bit", 0)
+    opt_dram_device_size = getattr(options, "dram_device_size", None)
 
     if opt_mem_type == "HMC_2500_1x32":
         HMChost = HMC.config_hmc_host_ctrl(options, system)
@@ -242,7 +247,8 @@ def config_mem(options, system):
             if opt_mem_type and (not opt_nvm_type or range_iter % 2 != 0):
                 # Create the DRAM interface
                 dram_intf = create_mem_intf(
-                    intf, r, i, intlv_bits, intlv_size, opt_xor_low_bit
+                    intf, r, i, intlv_bits, intlv_size, opt_xor_low_bit,
+                    opt_dram_device_size
                 )

                 # Set the number of ranks based on the command-line
diff --git a/configs/common/Options.py b/configs/common/Options.py
index 3de6a2a839..6164d6fff4 100644
--- a/configs/common/Options.py
+++ b/configs/common/Options.py
@@ -176,6 +176,11 @@ def addNoISAOptions(parser):
         type=str,
         help="use external port for SystemC TLM cosimulation",
     )
+    parser.add_argument(
+        "--dram-device-size",
+        default="1GB",
+        type=str,
+    )
     parser.add_argument("--caches", action="store_true")
     parser.add_argument("--l2cache", action="store_true")
     parser.add_argument("--l3cache", action="store_true")
